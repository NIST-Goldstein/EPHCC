#!/bin/bash

### BEGIN INIT INFO
#
# Provides : hilreceiver
# Required-Start : $remote_fs
# Required-Stop  : $remote_fs
# Default-Start     : 2 3 4 5
# Default-Stop     : 0 1 6
# Short-Description : hilreceiver
# Description : hilreceiver.
#
### END INIT INFO

## Fill in name of program here.
PROG="hilReceiver.pl"
PROG_PATH="/var/www/html/graphs/perl" ## 
PROG_ARGS="" 
PID_PATH="/var/run/"

cd $PROG_PATH

start() {
    if [ -e "$PID_PATH/$PROG.pid" ]; then
        ## Program is running, exit with error.
        echo "Error! $PROG is currently running!" 1>&2
        exit 1
    else
        ## Change from /dev/null to something like /var/log/$PROG if you want to save output.
        /usr/bin/perl $PROG_PATH/$PROG $PROG_ARGS 2>&1 >/var/log/hilreceiver &
		PID=`ps aux | grep $PROG | grep -v grep | awk '{print $2}'`	
        echo "$PROG started with pid $PID"
        echo $PID > "$PID_PATH/$PROG.pid"
    fi
}

stop() {
    if [ -e "$PID_PATH/$PROG.pid" ]; then
        ## Program is running, so stop it
        kill -9 `cat $PID_PATH/$PROG.pid`

        rm "$PID_PATH/$PROG.pid"
        
        echo "$PROG stopped"
    else
        ## Program is not running, exit with error.
        echo "Error! $PROG not started!" 1>&2
        exit 1
    fi
}

## Check to see if we are running as root first.
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root" 1>&2
    exit 1
fi

case "$1" in
    start)
        start
        exit 0
    ;;
    stop)
        stop
        exit 0
    ;;
    reload|restart|force-reload)
        stop
        start
        exit 0
    ;;
    **)
        echo "Usage: $0 {start|stop|reload}" 1>&2
        exit 1
    ;;
esac
